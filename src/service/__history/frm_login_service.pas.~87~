unit frm_login_service;

interface
uses my_contracts, Vcl.Dialogs,user_DTO, users_entity, SysUtils, user_repository;

type
TLoginService = class(TInterfacedObject,ILoginService)

private
  var FUserRepository : ILoginRepository;

public
  function GetByID: TUserDTO;
  function ValidarLogin(aDTO: TUserDTO):TUserDTO;
  constructor Create();
end;




implementation



{ TLoginService }



constructor TLoginService.Create();
begin
  FUserRepository := TUserRepository.Create();
end;

function TLoginService.GetByID: TUserDTO;
begin

end;


function TLoginService.ValidarLogin(aDTO: TUserDTO): TUserDTO;


begin

var FUser: TUserModel;
var FUserDTO: TUserDTO;

if Trim(aDto.Name) = '' then begin

  ShowMessage('O Nome precisa ser preenchido!');
end;


FUser := FUserRepository.FindByNome(aDTO.Name);

if(FUser = nil) then begin

Result := nil;

end else begin

FUserDTO := TUserDTO.Create;

FuserDTO.Name := FUser.GetNome;
FUserDTO.ID := FUser.GetID;

Result := FUserDTO;

end;






end;

end.
